	1、饿汉式（静态常量写法）
		优点：没有加锁，执行效率高，用户体验好
		缺点：类加载就初始化，不管用不用都占内存，可能浪费内存
	2、饿汉式（静态代码块写法）
		与1类似，不同的是将累的实例化放在静态代码块中，也就是类加载的时候执行初始化实例
	3、懒汉式（线程不安全写法）[判断是否为null再实例化]
		优点：延迟加载，适用于单线程
		缺点：线程不安全
	4、懒汉式 线程安全，同步方法（锁方法）
		优点：解决了线程安全问题
		缺点：效率太低
	5、懒汉式 线程安全，同步代码块
		优点：性能降低了
		缺点：(锁方法里的代码块，判断视为null时同步代码块 一个线程先进入 null，还没来得及往下执行，另一个线程衣蛾通过了这个判断语句没就对产生多个实例)
	6、双重检查法 用synchronized和null判断   ，先判断一次null ，加synchronized 同步class，再判断一次null，
		优点：线程安全，延迟加载，效率高
		缺点：还是有同步现象存在，或多或少影响性能
	7、静态内部类
		优点：避免了线程不安全，延迟加载，效率高。
	注册式单例：
	8、枚举
		推荐
	9、容器缓存式
		优点：容器式写法适用于创建实例非常多的情况，便于管理。
		缺点：是非线程安全的
	10、ThreadLocal 线程单例
		优点：使用ThreadLocal来实现多数据源动态切换
		缺点：适用于单线程
		
		
	会破坏单列的方式有
		反射
		序列化和反序列化